<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
        "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="com.cn.dsyg">

	<resultMap id="InvoiceDto" class="com.cn.dsyg.dto.InvoiceDto">
		<result property="id" column="id" />
		<result property="belongto" column="belongto" />
		<result property="warehouseno" column="warehouseno" />
		<result property="warehouserptno" column="warehouserptno" />
		<result property="productid" column="productid" />
		<result property="financeno" column="financeno" />
		<result property="invoiceno" column="invoiceno" />
		<result property="customerid" column="customerid" />
		<result property="customername" column="customername" />
		<result property="customer_info1" column="customer_info1" />
		<result property="customer_info2" column="customer_info2" />
		<result property="customer_info3" column="customer_info3" />
		<result property="customer_info4" column="customer_info4" />
		<result property="customer_info5" column="customer_info5" />
		<result property="quantity" column="quantity" />
		<result property="price" column="price" />
		<result property="pricetax" column="pricetax" />
		<result property="amount" column="amount" />
		<result property="amounttax" column="amounttax" />
		<result property="recpay" column="recpay" />
		<result property="status" column="status" />
		<result property="invoicedelno" column="invoicedelno" />
		<result property="quantitydel" column="quantitydel" />
		<result property="finanacedelno" column="finanacedelno" />
		<result property="warehouserptdelno" column="warehouserptdelno" />
		<result property="note" column="note" />
		<result property="invoice_date" column="invoice_date" />
		<result property="invoide_mem_id" column="invoide_mem_id" />
		<result property="res01" column="res01" />
		<result property="res02" column="res02" />
		<result property="res03" column="res03" />
		<result property="res04" column="res04" />
		<result property="res05" column="res05" />
		<result property="res06" column="res06" />
		<result property="res07" column="res07" />
		<result property="res08" column="res08" />
		<result property="res09" column="res09" />
		<result property="res10" column="res10" />
		<result property="createuid" column="createuid" />
		<result property="createdate" column="createdate" />
		<result property="updateuid" column="updateuid" />
		<result property="updatedate" column="updatedate" />
	</resultMap>
	<resultMap id="SumInvoiceDto" class="com.cn.dsyg.dto.InvoiceDto">
		<result property="warehouserptno" column="warehouserptno" />
		<result property="productid" column="productid" />
		<result property="financeno" column="financeno" />
		<result property="customerid" column="customerid" />
		<result property="quantity" column="quantity" />
		<result property="amount" column="amount" />
		<result property="amounttax" column="amounttax" />
	</resultMap>
	
	<resultMap id="InvoiceOKDto" class="com.cn.dsyg.dto.InvoiceDto">
		<result property="invoiceno" column="invoiceno" />
		<result property="warehouserptno" column="warehouserptno" />
		<result property="financeno" column="financeno" />
		<result property="customerid" column="customerid" />
		<result property="customername" column="customername" />
		<result property="strInvoice_date" column="strInvoice_date" />
		<result property="amounttax" column="amounttax" />
		<result property="invoide_mem_id" column="invoide_mem_id" />
	</resultMap>
	
	<select id="querySumInvoiceByFinanceno" resultClass="java.math.BigDecimal" parameterClass="java.util.Map">
		select sum(T.amounttax) from etb_invoice T where T.financeno = #financeno# and T.status = #status#
	</select>
	
	<select id="queryAllInvoiceList" parameterClass="java.util.Map" resultMap="InvoiceDto">
		select T.* from etb_invoice T where 1 = 1
		<isNotEmpty prepend="and" property="status">
			T.status in ($status$)
		</isNotEmpty>
	</select>
	
	<!-- InvoiceOK -->
	<select id="queryInvoiceOKCountByPage" resultClass="int" parameterClass="java.util.Map">
		select count(*) from (
			select T.invoiceno,group_concat(distinct T.warehouserptno) as warehouserptno,group_concat(distinct T.financeno) as financeno,
				group_concat(distinct T.customerid) as customerid,group_concat(distinct T.customername) as customername,
				group_concat(distinct DATE_FORMAT(T.invoice_date, '%Y-%m-%d')) as strInvoice_date,
				group_concat(distinct T.invoide_mem_id) as invoide_mem_id,
				sum(amounttax) as amounttax
			from etb_invoice T where 1 = 1
				<isNotEmpty prepend="and" property="status">
					T.status in ($status$)
				</isNotEmpty>
				<isNotEmpty prepend="and" property="invoiceDateHigh">
					T.invoice_date <![CDATA[<]]> #invoiceDateHigh#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="invoiceDateLow">
					T.invoice_date <![CDATA[>=]]> #invoiceDateLow#
				</isNotEmpty>
				group by T.invoiceno
		) A where 1 = 1
			<isNotEmpty prepend="and" property="financeno">
				A.financeno like '%$financeno$%' ESCAPE '/'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="invoiceno">
				A.invoiceno = #invoiceno#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="customername">
				A.customername like '%$customername$%' ESCAPE '/'
			</isNotEmpty>
	</select>
	
	<select id="queryInvoiceOKByPage" parameterClass="java.util.Map" resultMap="InvoiceOKDto">
		select A.* from (
			select T.invoiceno,group_concat(distinct T.warehouserptno) as warehouserptno,group_concat(distinct T.financeno) as financeno,
				group_concat(distinct T.customerid) as customerid,group_concat(distinct T.customername) as customername,
				group_concat(distinct DATE_FORMAT(T.invoice_date, '%Y-%m-%d')) as strInvoice_date,
				group_concat(distinct T.invoide_mem_id) as invoide_mem_id,
				sum(amounttax) as amounttax, max(status)
			from etb_invoice T where 1 = 1
				<isNotEmpty prepend="and" property="status">
					T.status in ($status$)
				</isNotEmpty>
				<isNotEmpty prepend="and" property="invoiceDateHigh">
					T.invoice_date <![CDATA[<]]> #invoiceDateHigh#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="invoiceDateLow">
					T.invoice_date <![CDATA[>=]]> #invoiceDateLow#
				</isNotEmpty>
				group by T.invoiceno
		) A where 1 = 1
			<isNotEmpty prepend="and" property="financeno">
				A.financeno like '%$financeno$%' ESCAPE '/'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="invoiceno">
				A.invoiceno = #invoiceno#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="customername">
				A.customername like '%$customername$%' ESCAPE '/'
			</isNotEmpty>
			order by A.invoiceno desc
			LIMIT #start#, #end#
	</select>
	
	
	<select id="queryInvoiceCountByPage" resultClass="int" parameterClass="java.util.Map">
		select count(*) from etb_invoice T where 1 = 1
		<isNotEmpty prepend="and" property="financeno">
			T.financeno = #financeno#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="invoiceno">
			T.invoiceno = #invoiceno#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="invoiceDateHigh">
			T.invoice_date <![CDATA[<]]> #invoiceDateHigh#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="invoiceDateLow">
			T.invoice_date <![CDATA[>=]]> #invoiceDateLow#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="status">
			T.status in ($status$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="recpay">
			T.recpay = #recpay#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="customerid">
			T.customerid = #customerid#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="customername">
			T.customername like '%$customername$%' ESCAPE '/'
		</isNotEmpty>
	</select>
	
	<select id="queryInvoiceByPage" parameterClass="java.util.Map" resultMap="InvoiceDto">
		select T.* from etb_invoice T where 1 = 1
		<isNotEmpty prepend="and" property="financeno">
			T.financeno = #financeno#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="invoiceno">
			T.invoiceno = #invoiceno#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="invoiceDateHigh">
			T.invoice_date <![CDATA[<]]> #invoiceDateHigh#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="invoiceDateLow">
			T.invoice_date <![CDATA[>=]]> #invoiceDateLow#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="status">
			T.status in ($status$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="recpay">
			T.recpay = #recpay#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="customerid">
			T.customerid = #customerid#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="customername">
			T.customername like '%$customername$%' ESCAPE '/'
		</isNotEmpty>
		order by T.updatedate desc
		LIMIT #start#, #end#
	</select>
	
	<select id="queryInvoiceByID" parameterClass="java.util.Map" resultMap="InvoiceDto">
		select * from etb_invoice where 
			id = #id#
	</select>
	
	<select id="queryInvoiceByInvoiceno" parameterClass="java.util.Map" resultMap="InvoiceDto">
		select T.* from etb_invoice T where 1 = 1 and T.invoiceno = #invoiceno#
		<isNotEmpty prepend="and" property="status">
			T.status in ($status$)
		</isNotEmpty>
	</select>
	
	<delete id="deleteAllInvoiceByFinanceno" parameterClass="java.util.Map">
		DELETE FROM etb_invoice WHERE financeno = #financeno#
	</delete>
	
	<select id="queryReturnInvoiceByFinancedelno" parameterClass="java.util.Map" resultMap="SumInvoiceDto">
		select T.productid,T.financeno,T.warehouserptno,T.customerid,
			sum(T.quantity) as quantity,sum(T.amount) as amount,sum(T.amounttax) as amounttax
		from etb_invoice T where T.finanacedelno = #finanacedelno# and T.productid = #productid#
			<isNotEmpty prepend="and" property="status">
				T.status in ($status$)
			</isNotEmpty>
			group by T.productid,T.financeno,T.warehouserptno,T.customerid
	</select>
	
	<select id="queryInvoiceByFinanceno" parameterClass="java.util.Map" resultMap="SumInvoiceDto">
		select T.productid,T.financeno,T.warehouserptno,T.customerid,
			sum(T.quantity) as quantity,sum(T.amount) as amount,sum(T.amounttax) as amounttax
		from etb_invoice T where T.financeno = #financeno#
			<isNotEmpty prepend="and" property="status">
				T.status in ($status$)
			</isNotEmpty>
			group by T.productid,T.financeno,T.warehouserptno,T.customerid
	</select>

	<delete id="deleteInvoice" parameterClass="java.util.Map">
		delete from etb_invoice where id = #id#
	</delete>
	
	<insert id="insertInvoice" parameterClass="com.cn.dsyg.dto.InvoiceDto">
		insert into etb_invoice(belongto,warehouseno,warehouserptno,productid,financeno,invoiceno,customerid,customername,customer_info1,
			customer_info2,customer_info3,customer_info4,customer_info5,quantity,price,pricetax,amount,amounttax,
			recpay,status,invoicedelno,quantitydel,finanacedelno,warehouserptdelno,note,invoice_date,invoide_mem_id,
			res01,res02,res03,res04,res05,res06,res07,res08,res09,res10,createuid,createdate,updateuid,updatedate)
		values(#belongto#,#warehouseno#,#warehouserptno#,#productid#,#financeno#,#invoiceno#,#customerid#,#customername#,#customer_info1#,
			#customer_info2#,#customer_info3#,#customer_info4#,#customer_info5#,#quantity#,#price#,#pricetax#,#amount#,#amounttax#,
			#recpay#,#status#,#invoicedelno#,#quantitydel#,#finanacedelno#,#warehouserptdelno#,#note#,#invoice_date#,#invoide_mem_id#,
			#res01#,#res02#,#res03#,#res04#,#res05#,#res06#,#res07#,#res08#,#res09#,#res10#,#createuid#,NOW(),#updateuid#,NOW())
		<selectKey resultClass="long" keyProperty="id" >
			select LAST_INSERT_ID() as value
		</selectKey>
	</insert>
	
	<update id="updateInvoice" parameterClass="com.cn.dsyg.dto.InvoiceDto">
		update etb_invoice
		set warehouseno = #warehouseno#,
			warehouserptno = #warehouserptno#,
			productid = #productid#,
			financeno = #financeno#,
			invoiceno = #invoiceno#,
			customerid = #customerid#,
			customername = #customername#,
			customer_info1 = #customer_info1#,
			customer_info2 = #customer_info2#,
			customer_info3 = #customer_info3#,
			customer_info4 = #customer_info4#,
			customer_info5 = #customer_info5#,
			quantity = #quantity#,
			price = #price#,
			pricetax = #pricetax#,
			amount = #amount#,
			amounttax = #amounttax#,
			recpay = #recpay#,
			status = #status#,
			invoicedelno = #invoicedelno#,
			quantitydel = #quantitydel#,
			finanacedelno = #finanacedelno#,
			warehouserptdelno = #warehouserptdelno#,
			note = #note#,
			invoice_date = #invoice_date#,
			invoide_mem_id = #invoide_mem_id#,
			res01 = #res01#,
			res02 = #res02#,
			res03 = #res03#,
			res04 = #res04#,
			res05 = #res05#,
			res06 = #res06#,
			res07 = #res07#,
			res08 = #res08#,
			res09 = #res09#,
			res10 = #res10#,
			updateuid = #updateuid#,
			updatedate = NOW()
		where id = #id#
	</update>
	
</sqlMap>